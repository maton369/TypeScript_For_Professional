// ビット OR 演算：0b0101 | 0b1100
//  0101
// |1100
// -----
//  1101 → 10進数で 13
console.log(0b0101 | 0b1100); // 13 (0b1101) が表示される

// ビット AND 演算：0b0101 & 0b1100
//  0101
// &1100
// -----
//  0100 → 10進数で 4
console.log(0b0101 & 0b1100); // 4 (0b0100) が表示される

// ビット NOT 演算（ビットの反転）：~0b0101
// 0b0101 = 5（10進）→ 32ビット整数で 000...0101
// ビット反転 → 111...1010 = -6（2の補数表現での結果）
// 補足：~x は -(x + 1) と等価である
console.log(~0b0101); // -6 (-5 - 1) が表示される